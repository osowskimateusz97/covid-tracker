{"version":3,"sources":["views/MapView/MapView.css.js","components/atoms/Paragraph/Paragraph.js","assets/world.jpg","components/molecules/Header/Header.css.js","components/molecules/Header/Header.js","components/molecules/InfoBox/InfoBox.css.js","components/molecules/InfoBox/InfoBox.js","utils.js","components/molecules/Note/Note.css.js","components/molecules/Map/Map.css.js","components/molecules/Map/Map.js","components/atoms/LineGraph/LineGraph.js","components/atoms/Table/Table.css.js","components/atoms/Table/Table.js","views/MapView/MapView.js","theme/GlobalStyle.js","components/organisms/Footer/Footer.css.js","components/organisms/Footer/Footer.js","components/organisms/InformationContainer/InformationContainer.css.js","components/organisms/InformationContainer/InformationContainer.js","views/Root.js","api.js","index.js"],"names":["Wrapper","styled","div","StyledFormControl","FormControl","Header","header","StatsWrapper","LeftSideWrapper","StyledButton","Button","StyledHeading","h3","StyledCard","Card","Paragraph","p","small","css","StyledWrapper","Image","img","cosmosBg","isActive","StyledParagraph","StyledFontAwesomeIcon","FontAwesomeIcon","HeaderMsgContainer","useState","setActive","changeHeader","type","style","textDecoration","color","to","onMouseOut","onMouseOver","icon","faGlobeEurope","active","isRed","StyledTypography","Typography","h2","isTotalCases","total","InfoBox","title","cases","props","mainPage","onClick","CardContent","gutterBottom","className","casesTypeColors","hex","rgb","half_op","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","prettyPrintStat","stat","numeral","format","showDataOnMap","casesType","map","country","Circle","center","countryInfo","lat","long","fillColor","fillOpacity","radius","Math","sqrt","Popup","backgroundImage","flag","isTest","Map","countries","zoom","TileLayer","url","attribution","options","legend","display","elements","point","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","value","scales","xAxes","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","lastDataPoint","chartData","date","newDataPoint","x","y","push","LineGraph","setData","useEffect","fetchData","fetch","res","json","console","log","length","datasets","backgroundColor","borderColor","Table","table","Tr","tr","Td","td","TableComponent","StartView","setInputCountry","setCountryInfo","setCountries","mapCountries","setMapCountries","tableData","setTableData","setCasesType","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","then","response","name","iso2","getCountriesData","onCountryChange","e","countryCode","target","variant","Select","onChange","MenuItem","todayCases","todayRecovered","todayDeaths","GlobalStyle","createGlobalStyle","StyledFooter","footer","Footer","Title","h1","Container","InformationContainer","globalCases","tests","Root","globalInfo","setGlobalInfo","fetchGlobalData","path","exact","MapView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf8d547e.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { Card, FormControl, Button } from \"@material-ui/core\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  background-color: #01031c;\r\n  padding: 20px;\r\n  height: 95vh;\r\n\r\n  @media (max-width: 990px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const StyledFormControl = styled(FormControl)`\r\n  background-color: rgb(37, 38, 82) !important;\r\n  & div,\r\n  & svg {\r\n    color: white !important;\r\n  }\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  justify-content: space-between;\r\n  > h1 {\r\n    color: #fc3c3c;\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nexport const StatsWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const LeftSideWrapper = styled.div`\r\n  background-color: #141532;\r\n  padding: 15px;\r\n  flex: 0.9;\r\n`;\r\n\r\nexport const StyledButton = styled(Button)`\r\n  background-color: #252652 !important;\r\n  color: white !important;\r\n`;\r\n\r\nexport const StyledHeading = styled.h3`\r\n  color: #6a5d5d;\r\n  font-weight: 400;\r\n  font-size: 1.5rem;\r\n  margin-bottom: 1rem;\r\n  &:last-of-type {\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\n\r\nexport const StyledCard = styled(Card)`\r\n  background-color: #141532 !important;\r\n`;\r\n","import styled,{css} from 'styled-components';\r\n\r\nconst Paragraph = styled.p`\r\nfont-size:1.5em;\r\n    ${({small})=>(\r\n        small && css`\r\n            font-size:0.8em;\r\n        `\r\n    )}\r\n`\r\n\r\nexport default Paragraph;","export default __webpack_public_path__ + \"static/media/world.b2b4d867.jpg\";","import styled, { css } from \"styled-components\";\r\nimport Paragraph from \"../../../components/atoms/Paragraph/Paragraph\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport cosmosBg from \"../../../assets/world.jpg\";\r\n\r\nexport const StyledWrapper = styled.header`\r\n  width: 100%;\r\n  height: 50vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  margin: 0 auto;\r\n  align-items: center;\r\n  color: white;\r\n  cursor: pointer;\r\n  position: relative;\r\n`;\r\nexport const Image = styled.img`\r\n  background: url(${cosmosBg}) center no-repeat;\r\n  background-color: #01031c;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  z-index: -1;\r\n  transition: 0.4s;\r\n  padding: 30px;\r\n  ${({ isActive }) =>\r\n    isActive &&\r\n    css`\r\n      filter: blur(3px);\r\n      padding: 0;\r\n    `}\r\n`;\r\nexport const StyledParagraph = styled(Paragraph)`\r\n  font-size: 2em;\r\n  letter-spacing: 1px;\r\n  margin-bottom: 20px;\r\n  transition: 0.3s;\r\n  ${({ isActive }) =>\r\n    isActive &&\r\n    css`\r\n      font-size: 1em;\r\n    `}\r\n`;\r\nexport const StyledFontAwesomeIcon = styled(FontAwesomeIcon)`\r\n  font-size: 3em;\r\n  transition: 0.3s;\r\n  margin-top: 20px;\r\n  ${({ isActive }) =>\r\n    isActive &&\r\n    css`\r\n      transform: scale(1.5);\r\n    `}\r\n`;\r\nexport const HeaderMsgContainer = styled.div`\r\n  width: 100%;\r\n  height: 30%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { faGlobeEurope } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  StyledWrapper,\r\n  Image,\r\n  HeaderMsgContainer,\r\n  StyledParagraph,\r\n  StyledFontAwesomeIcon,\r\n} from \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  const [isActive, setActive] = useState(false);\r\n\r\n  const changeHeader = (type) => {\r\n    if (type === \"out\") {\r\n      return setActive(false);\r\n    }\r\n    setActive(true);\r\n  };\r\n  return (\r\n    <StyledWrapper>\r\n      <Image isActive={isActive} />\r\n      <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/map\">\r\n        <HeaderMsgContainer\r\n          isActive={isActive}\r\n          onMouseOut={() => changeHeader(\"out\")}\r\n          onMouseOver={changeHeader}\r\n        >\r\n          <StyledParagraph isActive={isActive}>FULL SCREEN MAP</StyledParagraph>\r\n          <StyledFontAwesomeIcon isActive={isActive} icon={faGlobeEurope} />\r\n        </HeaderMsgContainer>\r\n      </Link>\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled, { css } from \"styled-components\";\r\nimport { Card, Typography } from \"@material-ui/core\";\r\n\r\nexport const StyledCard = styled(Card)`\r\n  flex: 1;\r\n  cursor: pointer;\r\n  background-color: #252652 !important;\r\n  ${({ active }) =>\r\n    active &&\r\n    css`\r\n      border-top: 10px solid greenyellow;\r\n    `}\r\n  ${({ isRed }) =>\r\n    isRed &&\r\n    css`\r\n      border-color: red;\r\n    `}\r\n   &:not(:last-child) {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\nexport const StyledTypography = styled(Typography)`\r\n  color: white !important;\r\n`;\r\n\r\nexport const StyledHeading = styled.h2`\r\n  color: ${({ isTotalCases }) => (isTotalCases ? \"#ffe6b3\" : \"lightgreen\")};\r\n  font-weight: 600;\r\n  font-size: 1.75rem;\r\n  margin-bottom: 0.5rem;\r\n  ${({ total }) =>\r\n    total &&\r\n    css`\r\n      color: #6c757d;\r\n      font-weight: 700 !important;\r\n      font-size: 0.8rem !important;\r\n      margin-top: 15px !important;\r\n    `}\r\n`;\r\n","import React from \"react\";\r\nimport { StyledCard, StyledTypography, StyledHeading } from \"./InfoBox.css\";\r\nimport { CardContent } from \"@material-ui/core\";\r\n\r\nconst InfoBox = ({\r\n  title,\r\n  cases,\r\n  isTotalCases,\r\n  total,\r\n  active,\r\n  isRed,\r\n  mainPage,\r\n  ...props\r\n}) => (\r\n  <StyledCard onClick={props.onClick}>\r\n    <CardContent>\r\n      <StyledTypography color=\"textSecondary\" gutterBottom>\r\n        {title}\r\n      </StyledTypography>\r\n      <StyledHeading\r\n        className={`infoBox__cases ${isRed && \"infoBox__cases--red\"}`}\r\n      >\r\n        {cases}\r\n      </StyledHeading>\r\n      <StyledTypography\r\n        className=\"infoBox__total\"\r\n        color=\"textSecondary\"\r\n        style={{ color: \"white\" }}\r\n      >\r\n        {total} Total\r\n      </StyledTypography>\r\n    </CardContent>\r\n  </StyledCard>\r\n);\r\n\r\nexport default InfoBox;\r\n","import numeral from 'numeral';\r\nimport React from \"react\";\r\nimport { Circle, Popup } from \"react-leaflet\";\r\n\r\nexport const convertToMilion = number=> numeral(number).format('0.0a'); \r\nexport const convertToThousandths = number=> numeral(number).format('0a'); \r\nconst casesTypeColors = {\r\n  cases: {\r\n    hex: \"#CC1034\",\r\n    rgb: \"rgb(204, 16, 52)\",\r\n    half_op: \"rgba(204, 16, 52, 0.5)\",\r\n    multiplier: 200,\r\n  },\r\n  recovered: {\r\n    hex: \"#7dd71d\",\r\n    rgb: \"rgb(125, 215, 29)\",\r\n    half_op: \"rgba(125, 215, 29, 0.5)\",\r\n    multiplier: 200,\r\n  },\r\n  deaths: {\r\n    hex: \"#fb4443\",\r\n    rgb: \"rgb(251, 68, 67)\",\r\n    half_op: \"rgba(251, 68, 67, 0.5)\",\r\n    multiplier: 400,\r\n  },\r\n};\r\n\r\nexport const sortData = (data) => {\r\n  let sortedData = [...data];\r\n  sortedData.sort((a, b) => {\r\n    if (a.cases > b.cases) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  });\r\n  return sortedData;\r\n};\r\n\r\nexport const prettyPrintStat = (stat) =>\r\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n\r\nexport const showDataOnMap = (data, casesType = \"cases\") =>\r\n  data.map((country) => (\r\n    <Circle\r\n      center={[country.countryInfo.lat, country.countryInfo.long]}\r\n      color={casesTypeColors[casesType].hex}\r\n      fillColor={casesTypeColors[casesType].hex}\r\n      fillOpacity={0.4}\r\n      radius={\r\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n      }\r\n    >\r\n      <Popup>\r\n        <div className=\"info-container\">\r\n          <div\r\n            className=\"info-flag\"\r\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n          ></div>\r\n          <div className=\"info-name\">{country.country}</div>\r\n          <div className=\"info-confirmed\">\r\n            Cases: {numeral(country.cases).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-recovered\">\r\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\r\n          </div>\r\n        </div>\r\n      </Popup>\r\n    </Circle>\r\n  ));\r\n","import styled, { css } from \"styled-components\";\r\nimport Paragraph from \"../../atoms/Paragraph/Paragraph\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport const StyledContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-template-rows: 50px 30px 30px;\r\n  font-size: 1.5em;\r\n  ${({ color }) =>\r\n    css`\r\n      color: ${color};\r\n    `};\r\n  ${({ isTest }) =>\r\n    isTest &&\r\n    css`\r\n      grid-template-rows: 50px 30px;\r\n    `};\r\n  margin-bottom: 50px;\r\n  justify-self: center;\r\n`;\r\nexport const StyledParagraph = styled(Paragraph)`\r\n  justify-self: center;\r\n  ${({ small }) =>\r\n    small &&\r\n    css`\r\n      font-size: 20px;\r\n    `}\r\n`;\r\nexport const StyledFontAwesomeIcon = styled(FontAwesomeIcon)`\r\n  font-size: 0.4em;\r\n  margin: 0 0 0 5px;\r\n`;\r\nexport const StyledActualInfoContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 10px;\r\n`;\r\nexport const StyledLastParagraph = styled(Paragraph)`\r\n  grid-row: 3;\r\n  justify-self: center;\r\n  ${({ isTest }) =>\r\n    isTest &&\r\n    css`\r\n      grid-row: 2;\r\n    `}\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  height: 500px;\r\n  background-color: white;\r\n  margin: 16px 0 16px 0;\r\n  box-shadow: 0 0 8px -4px rgba(0, 0, 0, 0.5);\r\n  & .leaflet-container {\r\n    height: 100%;\r\n  }\r\n  .info-flag img {\r\n    width: 100px;\r\n  }\r\n  .info-name {\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    color: #555;\r\n  }\r\n  .leaflet-popup-content-wrapper {\r\n    background: rgb(37, 38, 82) !important;\r\n  }\r\n  .info-name,\r\n  .info-confirmed,\r\n  .info-recovered,\r\n  .info-deaths {\r\n    color: white;\r\n  }\r\n  .info-container {\r\n    width: 150px;\r\n  }\r\n\r\n  .info-flag {\r\n    height: 80px;\r\n    width: 100%;\r\n    background-size: cover;\r\n    border-radius: 8px;\r\n  }\r\n\r\n  .info-confirmed,\r\n  .info-recovered,\r\n  .info-deaths {\r\n    font-size: 16px;\r\n    margin-top: 5px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Map as LeafletMap, TileLayer } from \"react-leaflet\";\r\nimport \"./Map.css\";\r\nimport { showDataOnMap } from \"../../../utils\";\r\nimport { Wrapper } from \"./Map.css\";\r\n\r\nconst Map = ({ countries, casesType, center, zoom }) => (\r\n  <Wrapper>\r\n    <LeafletMap center={center} zoom={zoom}>\r\n      <TileLayer\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n      />\r\n      {showDataOnMap(countries, casesType)}\r\n    </LeafletMap>\r\n  </Wrapper>\r\n);\r\n\r\nexport default Map;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          // Include a dollar sign in the ticks\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst buildChartData = (data, casesType) => {\r\n  let chartData = [];\r\n  let lastDataPoint;\r\n  for (let date in data.cases) {\r\n    if (lastDataPoint) {\r\n      let newDataPoint = {\r\n        x: date,\r\n        y: data[casesType][date] - lastDataPoint,\r\n      };\r\n      chartData.push(newDataPoint);\r\n    }\r\n    lastDataPoint = data[casesType][date];\r\n  }\r\n  return chartData;\r\n};\r\n\r\nconst LineGraph = ({ casesType }) => {\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const res = await fetch(\r\n        \"https://disease.sh/v3/covid-19/historical/all?lastdays=120\"\r\n      );\r\n      const data = await res.json();\r\n      let chartData = buildChartData(data, casesType);\r\n      setData(chartData);\r\n    };\r\n    console.log(data);\r\n    fetchData();\r\n  }, [casesType]);\r\n\r\n  return (\r\n    <div>\r\n      {data?.length > 0 && (\r\n        <Line\r\n          data={{\r\n            datasets: [\r\n              {\r\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\r\n                borderColor: \"#CC1034\",\r\n                data: data,\r\n              },\r\n            ],\r\n          }}\r\n          options={options}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineGraph;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  overflow-y: scroll;\r\n  height: 400px;\r\n`;\r\n\r\nexport const Table = styled.table`\r\n  width: 100%;\r\n  margin-top: 20px;\r\n  color: #6a5d5d;\r\n  overflow-x: hidden;\r\n`;\r\n\r\nexport const Tr = styled.tr`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: white;\r\n  &:nth-of-type(odd) {\r\n    background-color: #f3f2f8;\r\n  }\r\n`;\r\nexport const Td = styled.td`\r\n  padding: 0.5rem;\r\n  border: none;\r\n`;\r\n","import React from \"react\";\r\nimport \"./Table.css.js\";\r\nimport numeral from \"numeral\";\r\nimport { Wrapper, Table, Tr, Td } from \"./Table.css\";\r\n\r\nconst TableComponent = ({ countries }) => {\r\n  return (\r\n    <Wrapper>\r\n      <Table>\r\n        {countries.map((country) => (\r\n          <Tr>\r\n            <Td>{country.country}</Td>\r\n            <Td>\r\n              <strong>{numeral(country.cases).format(\"0,0\")}</strong>\r\n            </Td>\r\n          </Tr>\r\n        ))}\r\n      </Table>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default TableComponent;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Wrapper,\r\n  StyledFormControl,\r\n  Header,\r\n  StatsWrapper,\r\n  StyledHeading,\r\n  StyledCard,\r\n  LeftSideWrapper,\r\n  StyledButton,\r\n} from \"./MapView.css\";\r\nimport { MenuItem, Select, CardContent } from \"@material-ui/core\";\r\nimport { InfoBox } from \"components/molecules\";\r\nimport { LineGraph } from \"components/atoms\";\r\nimport { Table } from \"components/atoms\";\r\nimport { sortData, prettyPrintStat } from \"../../utils\";\r\nimport numeral from \"numeral\";\r\nimport { Map } from \"components/molecules\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst StartView = () => {\r\n  const [country, setInputCountry] = useState(\"worldwide\");\r\n  const [countryInfo, setCountryInfo] = useState({});\r\n  const [countries, setCountries] = useState([]);\r\n  const [mapCountries, setMapCountries] = useState([]);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [casesType, setCasesType] = useState(\"cases\");\r\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\r\n  const [mapZoom, setMapZoom] = useState(3);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://disease.sh/v3/covid-19/all\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCountryInfo(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getCountriesData = async () => {\r\n      const res = await fetch(\"https://disease.sh/v3/covid-19/countries\");\r\n      const data = await res.json();\r\n      const countries = data.map((country) => ({\r\n        name: country.country,\r\n        value: country.countryInfo.iso2,\r\n      }));\r\n      let sortedData = sortData(data);\r\n      setCountries(countries);\r\n      setMapCountries(data);\r\n      setTableData(sortedData);\r\n    };\r\n\r\n    getCountriesData();\r\n  }, []);\r\n\r\n  const onCountryChange = async (e) => {\r\n    const countryCode = e.target.value;\r\n\r\n    const url =\r\n      countryCode === \"worldwide\"\r\n        ? \"https://disease.sh/v3/covid-19/all\"\r\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\r\n    const res = await fetch(url);\r\n    const data = await res.json();\r\n    setInputCountry(countryCode);\r\n    setCountryInfo(data);\r\n    setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\r\n    setMapZoom(4);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <LeftSideWrapper>\r\n        <Header>\r\n          <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n            <StyledButton variant=\"contained\">Back</StyledButton>\r\n          </Link>\r\n          <h1>COVID-19 Tracker</h1>\r\n          <StyledFormControl>\r\n            <Select\r\n              variant=\"outlined\"\r\n              value={country}\r\n              onChange={onCountryChange}\r\n            >\r\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\r\n              {countries.map((country) => (\r\n                <MenuItem value={country.value}>{country.name}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </StyledFormControl>\r\n        </Header>\r\n\r\n        <Map\r\n          countries={mapCountries}\r\n          casesType={casesType}\r\n          center={mapCenter}\r\n          zoom={mapZoom}\r\n        />\r\n        <StatsWrapper>\r\n          <InfoBox\r\n            onClick={(e) => setCasesType(\"cases\")}\r\n            title=\"Coronavirus Cases\"\r\n            isTotalCases\r\n            active={casesType === \"cases\"}\r\n            cases={prettyPrintStat(countryInfo.todayCases)}\r\n            total={numeral(countryInfo.cases).format(\"0.0a\")}\r\n          />\r\n          <InfoBox\r\n            onClick={(e) => setCasesType(\"recovered\")}\r\n            title=\"Recovered\"\r\n            active={casesType === \"recovered\"}\r\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\r\n            total={numeral(countryInfo.recovered).format(\"0.0a\")}\r\n          />\r\n          <InfoBox\r\n            onClick={(e) => setCasesType(\"deaths\")}\r\n            title=\"Deaths\"\r\n            isRed\r\n            active={casesType === \"deaths\"}\r\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\r\n            total={numeral(countryInfo.deaths).format(\"0.0a\")}\r\n          />\r\n        </StatsWrapper>\r\n      </LeftSideWrapper>\r\n      <StyledCard>\r\n        <CardContent>\r\n          <div>\r\n            <StyledHeading>Live Cases by Country</StyledHeading>\r\n            <Table countries={tableData} />\r\n            <h3>Worldwide new {casesType}</h3>\r\n            <LineGraph casesType={casesType} />\r\n          </div>\r\n        </CardContent>\r\n      </StyledCard>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default StartView;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Iceland&display=swap');\r\n@import \"normalize.css\";\r\n\r\n*,*::before,*::after{\r\n    box-sizing:border-box;\r\n    margin:0;\r\n    padding:0;\r\n}\r\nbody{\r\n    height:100vh;\r\n    font-family: 'Iceland',monospace;\r\n    font-weight:400;\r\n    max-width:80%;\r\n    background-color: #f5f6fa;\r\n    margin:0 auto;\r\n    \r\n}\r\n*{\r\n     &::-webkit-scrollbar-track,\r\n  .MuiMenu-paper::-webkit-scrollbar-track {\r\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n    background-color: #aeafc9 !important;\r\n  }\r\n\r\n  &::-webkit-scrollbar,\r\n  .MuiMenu-paper::-webkit-scrollbar {\r\n    width: 12px;\r\n    background-color: #1a1313;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb,\r\n  .MuiMenu-paper::-webkit-scrollbar-thumb {\r\n    border-radius: 10px;\r\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n    background-color: #41437a;\r\n  }\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import styled from \"styled-components\";\r\nimport Paragraph from \"../../atoms/Paragraph/Paragraph\";\r\n\r\nexport const StyledFooter = styled.footer`\r\n  height: 5vh;\r\n  background-color: rgb(6, 7, 8);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nexport const StyledParagraph = styled(Paragraph)`\r\n  color: #fff;\r\n  font-size: 1.2em;\r\n`;\r\n","import { StyledParagraph, StyledFooter } from \"./Footer.css\";\r\n\r\nconst Footer = () => (\r\n  <StyledFooter>\r\n    <StyledParagraph>Created By Mateusz Osowski</StyledParagraph>\r\n  </StyledFooter>\r\n);\r\n\r\nexport default Footer;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: 150px 150px;\r\n  width: 85%;\r\n  margin: 0 auto;\r\n  height: 45vh;\r\n`;\r\nexport const Title = styled.h1`\r\n  grid-column: 1 / span 3;\r\n  height: 10vh;\r\n  padding: 30px 0 0 0;\r\n  color: #fff;\r\n  font-size: 2.2em;\r\n  margin-bottom: 30px;\r\n`;\r\nexport const Container = styled.div`\r\n  background-color: #01031c;\r\n`;\r\n","import { InfoBox } from \"components/molecules\";\r\nimport numeral from \"numeral\";\r\nimport { Wrapper, Title, Container } from \"./InformationContainer.css\";\r\nimport { prettyPrintStat } from \"../../../utils\";\r\n\r\nconst InformationContainer = ({\r\n  globalCases: {\r\n    cases,\r\n    deaths,\r\n    recovered,\r\n    tests,\r\n    todayCases,\r\n    todayDeaths,\r\n    todayRecovered,\r\n  },\r\n}) => (\r\n  <Container>\r\n    <Wrapper>\r\n      <Title>World data</Title>\r\n      <InfoBox\r\n        mainPage\r\n        title=\"Coronavirus Cases\"\r\n        isTotalCases\r\n        cases={prettyPrintStat(todayCases)}\r\n        total={numeral(cases).format(\"0.0a\")}\r\n      />\r\n      <InfoBox\r\n        mainPage\r\n        title=\"Recovered\"\r\n        cases={prettyPrintStat(todayRecovered)}\r\n        total={numeral(recovered).format(\"0.0a\")}\r\n      />\r\n      <InfoBox\r\n        mainPage\r\n        title=\"Deaths\"\r\n        isRed\r\n        cases={prettyPrintStat(todayDeaths)}\r\n        total={numeral(deaths).format(\"0.0a\")}\r\n      />\r\n    </Wrapper>\r\n  </Container>\r\n);\r\n\r\nexport default InformationContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GlobalStyle from \"../theme/GlobalStyle\";\r\nimport { Header } from \"components/molecules\";\r\nimport { InformationContainer, Footer } from \"components/organisms\";\r\nimport { globalData } from \"../api\";\r\nimport { MapView } from \"views\";\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nconst Root = () => {\r\n  const [globalInfo, setGlobalInfo] = useState({});\r\n\r\n  useEffect(() => {\r\n    //fetched global cases and set to variable\r\n    const fetchGlobalData = async () => {\r\n      const res = await fetch(globalData);\r\n      const data = await res.json();\r\n      setGlobalInfo(data);\r\n    };\r\n    fetchGlobalData();\r\n  }, []);\r\n\r\n  return (\r\n    <HashRouter>\r\n      <GlobalStyle />\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Header />\r\n          <InformationContainer globalCases={globalInfo} />\r\n        </Route>\r\n        <Route path=\"/map\">\r\n          <MapView />\r\n        </Route>\r\n      </Switch>\r\n      <Footer />\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default Root;\r\n","export const globalData = 'https://disease.sh/v3/covid-19/all';","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Root } from \"views\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Root />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}